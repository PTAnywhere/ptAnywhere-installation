---

- name: Check if folder exists
  stat: path="{{ installation_path }}"
  register: instp
  tags:
    - folder
    - packettracer
    - existence


- name: Create PT folder
  file:
    path: "{{ installation_path }}"
    state: directory
    owner: "{{ remote_user }}"
  become: True  # needed unless the folder is in the user home
  when: not instp.stat.exists
  tags:
    - folder
    - create
    - packettracer
    - installation


- name: Copy PT installation
  unarchive:
    src:  "{{ installation_file }}"
    dest: "{{ installation_path }}"
    owner: "{{ remote_user }}"
    group: "{{ remote_user }}"
  when: not instp.stat.exists
  tags:
    - packettracer
    - installation
    - install
    - copy
    - unpack


- name: Create PT user folder
  file:
    path: "{{ user_configuration_path }}"
    state: directory
    owner: "{{ remote_user }}"
  when: user_configuration_file != "false"
  tags:
    - folder
    - create
    - packettracer
    - user
    - configuration


- name: Copy PT user data
  unarchive:
    src:  "{{ user_configuration_file }}"
    dest: "{{ user_configuration_path }}"
    owner: "{{ remote_user }}"
    group: "{{ remote_user }}"
  when: user_configuration_file != "false"
  tags:
    - packettracer
    - user
    - configuration
    - copy
    - unpack


- name: Copy PT configuration data
  copy:
    src:  "{{ pt_configuration_file }}"
    dest: "{{ home_dir }}/.packettracer"
    owner: "{{ remote_user }}"
    group: "{{ remote_user }}"
  when: pt_configuration_file != "false"
  tags:
    - packettracer
    - user
    - configuration
    - copy


- name: Ensure that is executable
  file:
    dest: "{{ item }}"
    mode: "u=rwx,g=rx,o=r"
    state: file
  with_items:
    - "{{ installation_path }}/{{ pt_bin_relative_path }}"
    - "{{ installation_path }}/set_ptenv.sh"
    - "{{ installation_path }}/extensions/upnp/upnp"  # Otherwise it will prompt an error message on start...
  tags:
    - packettracer
    - installation
    - install
    - chmod
    - permissions
    - executable


- name: Ensure that the user owns the profile folder
  sudo: True
  file:
    dest: "/etc/profile"
    owner: "{{remote_user}}"
    group: "{{remote_user}}"
